<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>eu.openanalytics.phaedra</groupId>
		<artifactId>phaedra2-plateservice</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<artifactId>phaedra2-plateservice-server</artifactId>
	<name>phaedra2-plateservice-server</name>
	<packaging>jar</packaging>

	<properties>
		<java.version>16</java.version>
		<spring-cloud.version>2020.0.3</spring-cloud.version>
		<docker.repoPrefix/>
		<docker.imageName>${project.parent.artifactId}</docker.imageName>
		<maven.compiler.source>16</maven.compiler.source>
		<maven.compiler.target>16</maven.compiler.target>
	</properties>

	<dependencies>
		<!-- Swagger dependencies -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
		</dependency>

		<!-- Phaedra dependencies -->
		<dependency>
			<groupId>eu.openanalytics.phaedra</groupId>
			<artifactId>phaedra2-commons</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>eu.openanalytics.phaedra</groupId>
			<artifactId>phaedra2-plateservice-dto</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>eu.openanalytics.phaedra</groupId>
			<artifactId>phaedra2-measurementservice-client</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<!-- Spring Cloud Eureka dependencies -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-kubernetes-fabric8</artifactId>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>1.16.0</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.jupiter</groupId>
					<artifactId>junit-jupiter-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<version>1.16.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>eu.openanalytics.phaedra</groupId>
			<artifactId>phaedra2-measurementservice-client</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<scope>compile</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- Allows building a Docker image -->
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.37.0</version>
				<configuration>
					<verbose>true</verbose>
					<images>
						<image>
							<name>${docker.repoPrefix}${docker.imageName}</name>
							<build>
								<dockerFile>${project.basedir}/Dockerfile.app</dockerFile>
								<tags>
									<tag>${project.version}</tag>
								</tags>
								<args>
									<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
								</args>
							</build>
						</image>
						<image>
							<name>${docker.repoPrefix}${docker.imageName}.liquibase</name>
							<build>
								<dockerFile>${project.basedir}/Dockerfile.db</dockerFile>
								<tags>
									<tag>${project.version}</tag>
								</tags>
							</build>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>default</id>
						<phase>install</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.7</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
